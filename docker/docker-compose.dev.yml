services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: cms_postgres_dev
    environment:
      POSTGRES_DB: cms_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: cms_password_123
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    networks:
      - cms_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d cms_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # .NET CMS Application (Development)
  cms_app:
    build:
      context: ..
      dockerfile: docker/Dockerfile.dev
    container_name: cms_app_dev
    ports:
      - "5500:5000"
      - "5501:5001"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=cms_db;Username=postgres;Password=cms_password_123
      - ASPNETCORE_URLS=http://+:5000;https://+:5001
    volumes:
      # Main application files
      - ../Controllers:/app/Controllers
      - ../Data:/app/Data
      - ../Models:/app/Models
      - ../Properties:/app/Properties
      - ../Program.cs:/app/Program.cs
      - ../cms.csproj:/app/cms.csproj
      - ../appsettings.json:/app/appsettings.json
      - ../appsettings.Development.json:/app/appsettings.Development.json
      - ../appsettings.Docker.json:/app/appsettings.Docker.json
      # Exclude bin and obj from the host (use container's)
      - /app/bin
      - /app/obj
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - cms_network
    restart: unless-stopped

  # Test Runner Service (Development)
  cms_tests:
    build:
      context: ..
      dockerfile: docker/Dockerfile.test
    container_name: cms_tests_dev
    environment:
      - ASPNETCORE_ENVIRONMENT=Testing
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=cms_test_db;Username=postgres;Password=cms_password_123
    volumes:
      # Mount specific directories to preserve the structure built in Dockerfile
      - ../cms.Tests:/app/cms.Tests
      - ../Controllers:/app/Controllers
      - ../Data:/app/Data
      - ../Models:/app/Models
      - ../Properties:/app/Properties
      - ../Program.cs:/app/Program.cs
      - ../cms.csproj:/app/cms.csproj
      - ../cms.sln:/app/cms.sln
      - ../appsettings*.json:/app/
      - ../coverlet.runsettings:/app/coverlet.runsettings
      - ../TestResults:/app/TestResults
      # Exclude bin and obj from the host (use container's)
      - /app/bin
      - /app/obj
      - /app/cms.Tests/bin
      - /app/cms.Tests/obj
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - cms_network
    profiles:
      - test
    command:
      [
        "dotnet",
        "test",
        "cms.Tests/cms.Tests.csproj",
        "--configuration",
        "Debug",
        "--logger",
        "trx",
        "--results-directory",
        "/app/TestResults",
        "--collect",
        "XPlat Code Coverage",
        "--settings",
        "/app/coverlet.runsettings",
      ]

networks:
  cms_network:
    driver: bridge

volumes:
  postgres_dev_data:
